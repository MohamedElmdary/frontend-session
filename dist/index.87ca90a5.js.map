{"mappings":"AAGA,MAAM,KAAK;IAIT,YAAoB,OAAsB,CAAE;aAAxB,OAAsB,GAAtB,OAAsB;aAFlC,WAAW,GAAuB,IAAI,GAAG,EAAiB;QAGhE,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAG;YAAE,IAAI,EAAE,QAAQ;SAAE,CAAiB,CAAC;KAC5E;IAED,QAAQ,GAAG;QACT,OAAO,IAAI,CAAC,KAAK,CAAE;KACpB;IAED,QAAQ,CAAC,MAAS,EAAE;QAClB,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,KAAK,EAAG,MAAM,CAAC,CAAC;KAChD;IAED,SAAS,CAAC,UAAyB,EAAE;QACnC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEjC,OAAO,IAAM;YACX,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,CAAC;SACrC,CAAC;KACH;CACF","sources":["src/store/store.ts"],"sourcesContent":["type Reducer<T, A> = (state: T, action: A) => T;\ntype Subscriber<T> = (state: T) => void;\n\nclass Store<T, A> {\n  private state?: T;\n  private subscribers: Set<Subscriber<T>> = new Set<Subscriber<T>>();\n\n  constructor(private reducer: Reducer<T, A>) {\n    this.state = this.reducer(this.state!, { type: \"@@INIT\" } as unknown as A);\n  }\n\n  getState() {\n    return this.state!;\n  }\n\n  dispatch(action: A) {\n    this.state = this.reducer(this.state!, action);\n  }\n\n  subscribe(subscriber: Subscriber<T>) {\n    this.subscribers.add(subscriber);\n\n    return () => {\n      this.subscribers.delete(subscriber);\n    };\n  }\n}\n"],"names":[],"version":3,"file":"index.87ca90a5.js.map","sourceRoot":"/__parcel_source_root/"}